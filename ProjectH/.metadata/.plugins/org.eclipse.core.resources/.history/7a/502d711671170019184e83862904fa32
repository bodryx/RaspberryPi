package net.bodrykh.raspberrypi;

import java.util.Random;

public class Jarvis implements Runnable {
	private String inMindNow;

	private String strToSpeak;
	private int voiceType;

	public Jarvis(String strToSpeak, int voiceType) {
		this.strToSpeak = strToSpeak;
		this.voiceType = voiceType;
		inMindNow = "and a random decision is";
		go();
	}

	private boolean randomDecision() {
		Random rand = new Random();

		int n = rand.nextInt(100) + 1;
		if (n < 50)
			return true;
		return false;
	}

	private String mind(String str) {

		String inStr = str;
		return inStr + ". received " + inMindNow + " " + randomDecision();
	}

	public void go() {
		// for (int x = 1; x <= 100; x++)
		// System.out.println("Value of x:" + x + ", " + randomDecision());
		thread(new Jarvis("Jarvis", 0), false);
	}

	public String getFeedbackFrom(String str) {
		return mind(str);
	}

	public void speak(String str) {
		str = str.replace(" ", "_");
		System.out.println(str);
		Process p;
		try {
			p = Runtime.getRuntime().exec("espeak -s120 " + str + " 2>/dev/null");
			p.waitFor();
			System.out.println("exit: " + p.exitValue());
			p.destroy();
		} catch (Exception e) {
		}
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		String str = "sdfgsgs";
		speak(str);
	}

	public static void thread(Runnable runnable, boolean daemon) {
		Thread brokerThread = new Thread(runnable);
		brokerThread.setDaemon(daemon);
		brokerThread.start();
	}
}